---
type Props = {
  hasResume?: boolean;
};
const { hasResume = false } = Astro.props;
import { Button } from "@/components/ui/button";
import LinkedIn from "../../../assets/socials/linkedin.svg";
import GitHub from "../../../assets/socials/github.svg";
import config from "../../../lib/config";
import { FileUser, Mail } from "lucide-react";
---

<div class="flex items-center justify-center gap-4 social-buttons">
  <a
    href={config.pages.index.ctaLinks.linkedIn}
    target="_blank"
    class="rounded-full"
  >
    <Button
      variant="outline"
      className="rounded-full w-10 h-10 cursor-pointer p-0 has-\[\>svg\]\:px-0 [&_svg:not([class*='size-'])]:size-6"
      aria-label="LinkedIn"
    >
      <LinkedIn class="text-foreground" />
    </Button>
  </a>
  <a
    href={config.pages.index.ctaLinks.mail}
    target="_blank"
    class="rounded-full"
  >
    <Button
      variant="outline"
      className="rounded-full w-10 h-10 cursor-pointer p-0 has-\[\>svg\]\:px-0 [&_svg:not([class*='size-'])]:size-6"
      aria-label="Email"
    >
      <Mail className="text-foreground" />
    </Button>
  </a>
  <a
    href={config.pages.index.ctaLinks.github}
    target="_blank"
    class="rounded-full"
  >
    <Button
      variant="outline"
      className="rounded-full w-10 h-10 cursor-pointer p-0 has-\[\>svg\]\:px-0 [&_svg:not([class*='size-'])]:size-6"
      aria-label="GitHub"
    >
      <GitHub class="text-foreground" />
    </Button>
  </a>
  {
    hasResume && (
      <a
        href={config.pages.index.ctaLinks.resume}
        target="_blank"
        class="rounded-full"
      >
        <Button
          variant="outline"
          className="rounded-full h-10 cursor-pointer p-0 has-\[\>svg\]\:px-4 [&_svg:not([class*='size-'])]:size-4"
          aria-label="Resume"
        >
          <>
            <p>Resume</p>
            <FileUser className="m-auto" />
          </>
        </Button>
      </a>
    )
  }
</div>

<script>
  import gsap from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";

  gsap.registerPlugin(ScrollTrigger);

  gsap.utils.toArray(".social-buttons").forEach((container) => {
    const containerToAnimate = container as Element;
    gsap.from(containerToAnimate.querySelectorAll("a"), {
      y: 20,
      opacity: 0,
      duration: 0.6,
      ease: "power1.out",
      stagger: 0.1,
      scrollTrigger: {
        trigger: containerToAnimate,
        start: "top 95%",
        toggleActions: "play none none reverse",
      },
    });
  });
</script>
